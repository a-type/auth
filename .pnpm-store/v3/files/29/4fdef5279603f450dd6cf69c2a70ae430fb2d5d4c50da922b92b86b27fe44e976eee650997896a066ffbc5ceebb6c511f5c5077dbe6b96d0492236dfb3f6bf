"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useCalendarDay = void 0;
var react_1 = require("react");
var _1 = require(".");
var constants_1 = require("./constants");
/**
 * Given an enclosing Calendar context, this
 * returns the date at the given index. If you
 * have a row and column, compute the index as
 * row * 7 + column.
 */
function useCalendarDay(dayIndex, weekStartsOn) {
    if (weekStartsOn === void 0) { weekStartsOn = constants_1.WeekDay.Sunday; }
    var _a = (0, _1.useCalendarContext)(), month = _a.month, year = _a.year;
    var weekdayOffset = (0, _1.getMonthWeekdayOffset)(month, year, weekStartsOn);
    var day = dayIndex - weekdayOffset + 1;
    var date = new Date(year, month, day);
    return (0, react_1.useMemo)(function () { return ({
        date: date,
        key: date.toISOString(),
        isDifferentMonth: date.getMonth() !== month || date.getFullYear() !== year,
    }); }, [date, month, year]);
}
exports.useCalendarDay = useCalendarDay;
//# sourceMappingURL=useCalendarDay.js.map