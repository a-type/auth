// @unocss-include
'use client';
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue, } from '../select/Select.js';
import classNames from 'clsx';
import { withClassName } from '../../hooks/withClassName.js';
export function ColorPicker({ value, onChange }) {
    const resolvedValue = [
        'lemon',
        'tomato',
        'leek',
        'blueberry',
        'eggplant',
    ].includes(value || '')
        ? value
        : 'lemon';
    return (_jsxs(Select, Object.assign({ value: resolvedValue, onValueChange: onChange }, { children: [_jsx(SelectTrigger, { children: _jsx(SelectValue, {}) }), _jsxs(SelectContent, Object.assign({ className: "z-[calc(var(--z-dialog)+1)]" }, { children: [_jsxs(SelectItem, Object.assign({ value: "lemon" }, { children: [_jsx(ColorSwatch, { value: "lemon" }), _jsx(ItemLabel, { children: "Lemon" })] })), _jsxs(SelectItem, Object.assign({ value: "tomato" }, { children: [_jsx(ColorSwatch, { value: "tomato" }), _jsx(ItemLabel, { children: "Tomato" })] })), _jsxs(SelectItem, Object.assign({ value: "leek" }, { children: [_jsx(ColorSwatch, { value: "leek" }), _jsx(ItemLabel, { children: "Leek" })] })), _jsxs(SelectItem, Object.assign({ value: "blueberry" }, { children: [_jsx(ColorSwatch, { value: "blueberry" }), _jsx(ItemLabel, { children: "Blueberry" })] })), _jsxs(SelectItem, Object.assign({ value: "eggplant" }, { children: [_jsx(ColorSwatch, { value: "eggplant" }), _jsx(ItemLabel, { children: "Eggplant" })] }))] }))] })));
}
const ItemLabel = withClassName('span', 'sr-only');
export function ColorSwatch({ value, children, }) {
    return (_jsx("div", Object.assign({ className: classNames('bg-primary w-16px h-16px rounded-sm', `theme-${value !== null && value !== void 0 ? value : 'lemon'}`) }, { children: children })));
}
//# sourceMappingURL=ColorPicker.js.map