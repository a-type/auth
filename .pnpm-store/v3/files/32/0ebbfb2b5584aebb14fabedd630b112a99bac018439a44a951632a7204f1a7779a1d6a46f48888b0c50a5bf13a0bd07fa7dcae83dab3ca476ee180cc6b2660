// @unocss-include
"use strict";
'use client';
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DialogSelectItem = exports.DialogSelectItemRoot = exports.DialogSelectList = exports.DialogSelectTrigger = exports.DialogActions = exports.DialogClose = exports.DialogDescription = exports.DialogTitle = exports.DialogContent = exports.DialogTrigger = exports.Dialog = exports.DialogSwipeHandle = exports.Content = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const DialogPrimitive = __importStar(require("@radix-ui/react-dialog"));
const RadioGroupPrimitive = __importStar(require("@radix-ui/react-radio-group"));
const react_1 = require("react");
const withClassName_js_1 = require("../../hooks/withClassName.js");
const useMergedRef_js_1 = __importDefault(require("../../hooks/useMergedRef.js"));
const particles_js_1 = require("../particles.js");
const clsx_1 = __importDefault(require("clsx"));
const react_icons_1 = require("@radix-ui/react-icons");
const select_js_1 = require("../select.js");
const react_2 = require("@use-gesture/react");
const StyledOverlay = (0, withClassName_js_1.withClassName)(DialogPrimitive.Overlay, 'layer-components:fixed layer-components:inset-0 layer-components:z-dialog-backdrop layer-components:animate-fade-in layer-components:animate-duration-200 layer-components:bg-gray-dark-blend layer-components:[box-shadow:inset_0_30px_60px_0px_#00001020] layer-components:border-top-1 layer-components:border-top-solid layer-components:border-top-gray-5', 'layer-components:[&[data-state=closed]]:animate-fade-out', 'motion-reduce:animate-none');
const StyledContent = (0, withClassName_js_1.withClassName)(DialogPrimitive.Content, 'layer-components:z-dialog layer-components:fixed layer-components:shadow-xl layer-components:bg-white layer-components:overflow-y-auto layer-components:flex layer-components:flex-col layer-components:border-default', 'transform-gpu !motion-reduce:animate-none', 'layer-components:left-50% layer-components:top-50% layer-components:translate-[-50%] layer-components:w-90vw layer-components:max-w-450px layer-components:max-h-85vh layer-components:p-6 layer-components:pt-8 layer-components:rounded-lg layer-components:border-b-1 layer-components:pt-6', 'layer-components:animate-dialog-in layer-components:[&[data-state=closed]]:animate-dialog-out layer-components:motion-reduce:animate-none');
const sheetClassName = (0, clsx_1.default)('layer-variants:lt-sm:translate-0 layer-variants:lt-sm:bottom-[calc(var(--viewport-bottom-offset,0px)+var(--gesture-y,0px))] layer-variants:lt-sm:left-0 layer-variants:lt-sm:right-0 layer-variants:lt-sm:top-auto layer-variants:lt-sm:h-min-content layer-variants:lt-sm:max-h-[calc(0.85*var(--viewport-height,100vh))] layer-variants:lt-sm:rounded-tl-xl layer-variants:lt-sm:rounded-tr-xl layer-variants:lt-sm:rounded-b-0 layer-variants:lt-sm:p-6 layer-variants:lt-sm:pt-8 layer-variants:lt-sm:w-full layer-variants:lt-sm:max-w-none layer-variants:lt-sm:pb-[calc(3rem+env(safe-area-inset-bottom,0px))] layer-variants:lt-sm:border-b-0', 'layer-variants:lt-sm:animate-ease-in layer-variants:lt-sm:animate-fade-in-up layer-variants:lt-sm:[&[data-state=closed]]:animate-fade-out-down');
exports.Content = (0, react_1.forwardRef)(function Content(_a, ref) {
    var { children, width, outerClassName, className, disableSheet } = _a, props = __rest(_a, ["children", "width", "outerClassName", "className", "disableSheet"]);
    const particles = (0, particles_js_1.useParticles)();
    const wasOpenRef = (0, react_1.useRef)(false);
    const openRef = (0, react_1.useCallback)((element) => {
        if (!wasOpenRef.current &&
            (element === null || element === void 0 ? void 0 : element.getAttribute('data-state')) === 'open') {
            wasOpenRef.current = true;
            const matchesSmall = !disableSheet &&
                typeof window !== 'undefined' &&
                !window.matchMedia('(min-width:600px)').matches;
            if (!matchesSmall)
                return;
            setTimeout(() => {
                particles === null || particles === void 0 ? void 0 : particles.addParticles(particles.elementExplosion({
                    count: 20,
                    margin: 40,
                    borders: ['top'],
                    color: [
                        {
                            space: 'rgb',
                            values: [0, 0, 0],
                            opacity: 0.02,
                        },
                        {
                            space: 'rgb',
                            values: [0, 0, 0],
                            opacity: 0,
                        },
                    ],
                    element,
                    startRadius: 15,
                    endRadius: 0,
                    lifespan: 1000,
                    force: 0.5,
                    drag: 0.01,
                    forceFuzz: 0.5,
                    angleFuzz: 0.1,
                }));
            }, 180);
        }
        else if ((element === null || element === void 0 ? void 0 : element.getAttribute('data-state')) === 'closed') {
            wasOpenRef.current = false;
        }
    }, [particles, disableSheet]);
    const gestureRef = (0, react_1.useRef)(null);
    const finalRef = (0, useMergedRef_js_1.default)(ref, openRef, gestureRef);
    return ((0, jsx_runtime_1.jsxs)(DialogPrimitive.Portal, { children: [(0, jsx_runtime_1.jsx)(StyledOverlay, {}), (0, jsx_runtime_1.jsxs)(StyledContent, Object.assign({ "data-dialog-content": true, ref: finalRef }, props, { className: (0, clsx_1.default)({
                    'md:max-w-800px': width === 'lg',
                    'max-w-600px': width === 'md',
                    'max-w-300px': width === 'sm',
                }, !disableSheet && sheetClassName, outerClassName || className) }, { children: [!disableSheet && (0, jsx_runtime_1.jsx)(exports.DialogSwipeHandle, {}), children] }))] }));
});
exports.DialogSwipeHandle = (0, react_1.forwardRef)(function DialogSwipeHandle(_a, ref) {
    var { className } = _a, props = __rest(_a, ["className"]);
    const close = (0, react_1.useContext)(DialogCloseContext);
    const innerRef = (0, react_1.useRef)(null);
    (0, react_2.useDrag)(({ swipe: [, swipeY], movement: [, dy], velocity: [, vy], last }) => {
        const content = findParentDialogContent(innerRef.current);
        if (!content)
            return;
        const contentHeight = content.clientHeight;
        if (last)
            console.log(swipeY, dy, contentHeight);
        if (last && (swipeY === 1 || dy > contentHeight / 2)) {
            close();
        }
        const gestureY = last ? 0 : -Math.max(0, dy);
        content.style.setProperty('--gesture-y', `${gestureY}px`);
        content.style.setProperty('transition', last ? 'bottom 0.2s' : '');
    }, {
        target: innerRef,
        axis: 'y',
    });
    const finalRef = (0, useMergedRef_js_1.default)(ref, innerRef);
    return ((0, jsx_runtime_1.jsx)("div", Object.assign({ ref: finalRef }, props, { className: (0, clsx_1.default)('absolute top-0 left-50% transform-gpu -translate-x-1/2 w-20% py-2 rounded-full cursor-grab sm:hidden touch-none', className) }, { children: (0, jsx_runtime_1.jsx)("div", { className: "w-full h-[4px] bg-gray-4 rounded-full" }) })));
});
function findParentDialogContent(element) {
    if (!element)
        return null;
    if (element.getAttribute('data-dialog-content'))
        return element;
    return findParentDialogContent(element.parentElement);
}
const DialogCloseContext = (0, react_1.createContext)(() => { });
const StyledTitle = (0, withClassName_js_1.withClassName)(DialogPrimitive.Title, 'font-title color-black text-3xl mb-4 mt-0');
const StyledDescription = (0, withClassName_js_1.withClassName)(DialogPrimitive.Description, 'mt-3 mb-6 color-gray8 text-md leading-6');
// Exports
const Dialog = (props) => {
    var _a;
    const [innerOpen, innerOnOpenChange] = (0, react_1.useState)(props.defaultOpen);
    const open = (_a = props.open) !== null && _a !== void 0 ? _a : innerOpen;
    const onOpenChange = (0, react_1.useCallback)((open) => {
        var _a;
        innerOnOpenChange(open);
        (_a = props.onOpenChange) === null || _a === void 0 ? void 0 : _a.call(props, open);
    }, [props.onOpenChange]);
    const close = (0, react_1.useCallback)(() => {
        onOpenChange(false);
    }, [onOpenChange]);
    return ((0, jsx_runtime_1.jsx)(DialogCloseContext.Provider, Object.assign({ value: close }, { children: (0, jsx_runtime_1.jsx)(DialogPrimitive.Root, Object.assign({}, props, { open: open, onOpenChange: onOpenChange })) })));
};
exports.Dialog = Dialog;
exports.DialogTrigger = DialogPrimitive.Trigger;
exports.DialogContent = exports.Content;
exports.DialogTitle = StyledTitle;
exports.DialogDescription = StyledDescription;
exports.DialogClose = DialogPrimitive.Close;
exports.DialogActions = (0, withClassName_js_1.withClassName)('div', 'flex justify-end sticky w-full gap-3 items-center bg-white py-3 translate-y-6 flex-wrap', 'bottom--6', 'sm:bottom-0');
exports.DialogSelectTrigger = (0, react_1.forwardRef)(function DialogSelectTrigger(_a, ref) {
    var { children, className } = _a, props = __rest(_a, ["children", "className"]);
    return ((0, jsx_runtime_1.jsxs)(DialogPrimitive.Trigger, Object.assign({ className: (0, clsx_1.default)(select_js_1.selectTriggerClassName, className) }, props, { children: [(0, jsx_runtime_1.jsx)("span", { children: children }), (0, jsx_runtime_1.jsx)(react_icons_1.ChevronDownIcon, {})] })));
});
exports.DialogSelectList = (0, withClassName_js_1.withClassName)(RadioGroupPrimitive.Root, 'flex flex-col gap-2 overflow-y-auto p-2');
exports.DialogSelectItemRoot = (0, withClassName_js_1.withClassName)(RadioGroupPrimitive.Item, 'flex items-center gap-3 w-full py-3 px-4 text-left border-none rounded-lg font-normal bg-transparent [&:nth-child(2n+1)]:bg-gray-blend cursor-pointer transition-all', '[&[data-state=checked]]:bg-primary-wash [&[data-state=checked]]:text-primary-dark');
exports.DialogSelectItem = (0, react_1.forwardRef)(function DialogSelectItem(_a, ref) {
    var { children } = _a, props = __rest(_a, ["children"]);
    return ((0, jsx_runtime_1.jsxs)(exports.DialogSelectItemRoot, Object.assign({}, props, { children: [(0, jsx_runtime_1.jsx)("span", Object.assign({ className: "flex-1" }, { children: children })), (0, jsx_runtime_1.jsx)(RadioGroupPrimitive.Indicator, Object.assign({ className: "flex-0-0-auto" }, { children: (0, jsx_runtime_1.jsx)(react_icons_1.CheckIcon, {}) }))] })));
});
//# sourceMappingURL=Dialog.js.map