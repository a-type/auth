// @unocss-include
"use strict";
'use client';
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfirmedButton = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const dialog_js_1 = require("../dialog.js");
const typography_js_1 = require("../typography.js");
const Button_js_1 = require("./Button.js");
function ConfirmedButton(_a) {
    var { confirmText, confirmTitle = 'Are you sure?', confirmAction = 'OK', cancelAction = 'Nevermind', confirmColor = 'primary', onConfirm, skip } = _a, rest = __rest(_a, ["confirmText", "confirmTitle", "confirmAction", "cancelAction", "confirmColor", "onConfirm", "skip"]);
    const [open, setOpen] = (0, react_1.useState)(false);
    const [loading, setLoading] = (0, react_1.useState)(false);
    const confirm = (0, react_1.useCallback)(async () => {
        setLoading(true);
        try {
            await onConfirm();
            setOpen(false);
        }
        finally {
            setLoading(false);
        }
    }, [onConfirm]);
    if (skip) {
        return (0, jsx_runtime_1.jsx)(Button_js_1.Button, Object.assign({}, rest));
    }
    return ((0, jsx_runtime_1.jsxs)(dialog_js_1.Dialog, Object.assign({ open: open, onOpenChange: setOpen }, { children: [(0, jsx_runtime_1.jsx)(dialog_js_1.DialogTrigger, Object.assign({ asChild: true }, { children: (0, jsx_runtime_1.jsx)(Button_js_1.Button, Object.assign({}, rest)) })), (0, jsx_runtime_1.jsxs)(dialog_js_1.DialogContent, { children: [(0, jsx_runtime_1.jsx)(dialog_js_1.DialogTitle, { children: confirmTitle }), (0, jsx_runtime_1.jsx)(typography_js_1.P, { children: confirmText }), (0, jsx_runtime_1.jsxs)(dialog_js_1.DialogActions, { children: [(0, jsx_runtime_1.jsx)(dialog_js_1.DialogClose, Object.assign({ asChild: true }, { children: (0, jsx_runtime_1.jsx)(Button_js_1.Button, { children: cancelAction }) })), (0, jsx_runtime_1.jsx)(Button_js_1.Button, Object.assign({ loading: loading, onClick: confirm, color: confirmColor }, { children: confirmAction }))] })] })] })));
}
exports.ConfirmedButton = ConfirmedButton;
//# sourceMappingURL=ConfirmedButton.js.map