// @unocss-include
var _a, _b;
import { useCallback, useEffect } from 'react';
let defaultColor = '#ffffff';
if (typeof document !== 'undefined') {
    defaultColor =
        (_b = (_a = document.querySelector('meta[name=theme-color]')) === null || _a === void 0 ? void 0 : _a.getAttribute('content')) !== null && _b !== void 0 ? _b : defaultColor;
}
function changeThemeColor(color) {
    // evaluate css var if necessary
    if (color.startsWith('var(')) {
        const root = document.documentElement;
        const cssVar = color.slice(4, -1).trim();
        color = getComputedStyle(root).getPropertyValue(cssVar);
    }
    var metaThemeColor = document.querySelector('meta[name=theme-color]');
    metaThemeColor === null || metaThemeColor === void 0 ? void 0 : metaThemeColor.setAttribute('content', color);
}
export function useTitleBarColor(color) {
    useEffect(() => {
        changeThemeColor(color);
        return () => {
            changeThemeColor(defaultColor);
        };
    }, [color]);
}
export function useSetTitleBarColor() {
    const setColor = useCallback((color) => changeThemeColor(color), []);
    const resetColor = useCallback(() => changeThemeColor(defaultColor), []);
    return { setColor, resetColor };
}
//# sourceMappingURL=useTitleBarColor.js.map