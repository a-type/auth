import { ReactNode } from 'react';
import { IconProps } from '../icon.js';
export declare const navBarItemClass: string;
export interface NavBarItemProps {
    asChild?: boolean;
    className?: string;
    children?: ReactNode;
    active?: boolean;
}
export declare const NavBarItem: import("react").ForwardRefExoticComponent<NavBarItemProps & import("react").RefAttributes<HTMLDivElement>>;
export declare const NavBarItemIconWrapper: import("react").FunctionComponent<Omit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
    ref?: ((instance: HTMLDivElement | null) => void) | import("react").RefObject<HTMLDivElement> | null | undefined;
}>;
export declare const NavBarItemText: import("react").FunctionComponent<Omit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, "ref"> & {
    ref?: ((instance: HTMLSpanElement | null) => void) | import("react").RefObject<HTMLSpanElement> | null | undefined;
}>;
interface NavBarItemIconProps {
    asChild?: boolean;
    name?: IconProps['name'];
    className?: string;
    children?: ReactNode;
}
export declare const NavBarItemIcon: import("react").ForwardRefExoticComponent<NavBarItemIconProps & import("react").RefAttributes<any>>;
export declare const NavBarItemPip: import("react").FunctionComponent<Omit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
    ref?: ((instance: HTMLDivElement | null) => void) | import("react").RefObject<HTMLDivElement> | null | undefined;
}>;
export declare const NavBarRoot: import("react").FunctionComponent<Omit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
    ref?: ((instance: HTMLDivElement | null) => void) | import("react").RefObject<HTMLDivElement> | null | undefined;
}>;
export {};
