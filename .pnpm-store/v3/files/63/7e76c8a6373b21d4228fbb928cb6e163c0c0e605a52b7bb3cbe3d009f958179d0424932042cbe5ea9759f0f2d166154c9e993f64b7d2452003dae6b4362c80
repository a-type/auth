import { useMemo } from 'react';
import { getMonthWeekdayOffset, useCalendarContext } from '.';
import { WeekDay } from './constants';
/**
 * Given an enclosing Calendar context, this
 * returns the date at the given index. If you
 * have a row and column, compute the index as
 * row * 7 + column.
 */
export function useCalendarDay(dayIndex, weekStartsOn) {
    if (weekStartsOn === void 0) { weekStartsOn = WeekDay.Sunday; }
    var _a = useCalendarContext(), month = _a.month, year = _a.year;
    var weekdayOffset = getMonthWeekdayOffset(month, year, weekStartsOn);
    var day = dayIndex - weekdayOffset + 1;
    var date = new Date(year, month, day);
    return useMemo(function () { return ({
        date: date,
        key: date.toISOString(),
        isDifferentMonth: date.getMonth() !== month || date.getFullYear() !== year,
    }); }, [date, month, year]);
}
//# sourceMappingURL=useCalendarDay.js.map