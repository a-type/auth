// @unocss-include
"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FullScreenSpinner = exports.Spinner = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const clsx_1 = __importDefault(require("clsx"));
const CIRCLE_SIZE = 44;
exports.Spinner = (0, react_1.forwardRef)(function Spinner(_a, ref) {
    var { size = 40, thickness = 7.2, className, style } = _a, props = __rest(_a, ["size", "thickness", "className", "style"]);
    return ((0, jsx_runtime_1.jsx)("div", Object.assign({ ref: ref, role: "progressbar" }, props, { className: (0, clsx_1.default)('inline-block animate-spin animate-ease-linear animate-iteration-infinite color-inherit animate-duration-1400 transform-origin-[50%_50%]', className), style: Object.assign({ width: size, height: size }, style) }, { children: (0, jsx_runtime_1.jsx)("svg", Object.assign({ className: "block", viewBox: `${CIRCLE_SIZE / 2} ${CIRCLE_SIZE / 2} ${CIRCLE_SIZE} ${CIRCLE_SIZE}` }, { children: (0, jsx_runtime_1.jsx)("circle", { className: "stroke-current animate-spinner-stroke animate-ease-in-out animate-iteration-infinite animate-duration-1400 [stroke-dasharray:80_200] [stroke-dashoffset:0]", cx: CIRCLE_SIZE, cy: CIRCLE_SIZE, r: (CIRCLE_SIZE - thickness) / 2, fill: "none", strokeWidth: thickness }) })) })));
});
exports.FullScreenSpinner = (0, react_1.forwardRef)(function FullScreenSpinner(props, ref) {
    return ((0, jsx_runtime_1.jsx)("div", Object.assign({ ref: ref, className: "flex flex-row gap-4 w-full flex-1 justify-center items-center self-stretch" }, { children: (0, jsx_runtime_1.jsx)(exports.Spinner, Object.assign({}, props)) })));
});
//# sourceMappingURL=Spinner.js.map