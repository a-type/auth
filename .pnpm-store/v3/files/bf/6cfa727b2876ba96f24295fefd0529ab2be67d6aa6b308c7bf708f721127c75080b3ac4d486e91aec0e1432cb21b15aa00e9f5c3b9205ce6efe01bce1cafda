// @unocss-include
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { jsx as _jsx } from "react/jsx-runtime";
import { forwardRef } from 'react';
import { withClassName } from '../../hooks/withClassName.js';
import classNames from 'clsx';
const DividerBase = withClassName('div', 'w-full h-1px bg-black relative');
export const Divider = forwardRef(function Divider(_a, ref) {
    var { compensate, padded, className } = _a, props = __rest(_a, ["compensate", "padded", "className"]);
    return (_jsx(DividerBase, Object.assign({ ref: ref, style: {
            left: compensate ? `calc(${compensate} * 0.25rem)` : undefined,
            width: compensate ? `calc(100% - ${compensate} * 0.5rem)` : undefined,
        } }, props, { className: classNames(padded && 'my-4', className) })));
});
//# sourceMappingURL=Divider.js.map