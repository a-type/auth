// @unocss-include
"use strict";
'use client';
Object.defineProperty(exports, "__esModule", { value: true });
exports.RelativeTime = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const date_fns_1 = require("date-fns");
const utils_1 = require("@a-type/utils");
function formatDistanceToNow(date) {
    const now = Date.now();
    if (Math.abs(date.getTime() - now) < 1000) {
        return 'just now';
    }
    return ((0, date_fns_1.formatDistanceToNowStrict)(date) +
        (date.getTime() < now ? ' ago' : ' from now'));
}
function RelativeTime({ value, abbreviate }) {
    const asDate = (0, react_1.useMemo)(() => new Date(value), [value]);
    const [time, setTime] = (0, react_1.useState)(() => abbreviate
        ? (0, utils_1.shortenTimeUnits)(formatDistanceToNow(asDate))
        : formatDistanceToNow(asDate));
    (0, react_1.useEffect)(() => {
        const update = () => {
            setTime(abbreviate
                ? (0, utils_1.shortenTimeUnits)(formatDistanceToNow(asDate))
                : formatDistanceToNow(asDate));
        };
        const interval = setInterval(update, 60 * 1000);
        update();
        return () => clearInterval(interval);
    }, [asDate, abbreviate]);
    return (0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, { children: time });
}
exports.RelativeTime = RelativeTime;
//# sourceMappingURL=RelativeTime.js.map