// @unocss-include
import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { CollapsibleSimple } from './Collapsible.js';
import { useState } from 'react';
const meta = {
    title: 'CollapsibleSimple',
    component: CollapsibleSimple,
    argTypes: {},
    parameters: {
        controls: { expanded: true },
    },
};
export default meta;
export const Default = {
    render: () => {
        const [count, setCount] = useState(2);
        const [open, setOpen] = useState(false);
        return (_jsxs(_Fragment, { children: [_jsxs(CollapsibleSimple, Object.assign({ open: open }, { children: [_jsx("button", Object.assign({ onClick: () => setCount(count + 1) }, { children: "Increment" })), _jsx("button", Object.assign({ onClick: () => setCount(count - 1) }, { children: "Decrement" })), new Array(count).fill(null).map((_, i) => (_jsxs("div", { children: ["Item ", i] }, i)))] })), _jsx("button", Object.assign({ onClick: () => setOpen(!open) }, { children: "Toggle" }))] }));
    },
};
//# sourceMappingURL=Collapsible.stories.js.map