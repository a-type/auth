// @unocss-include
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { jsx as _jsx } from "react/jsx-runtime";
import { Slot } from '@radix-ui/react-slot';
import classNames from 'clsx';
import { forwardRef } from 'react';
export const Chip = forwardRef(function Chip(_a, ref) {
    var { className, color = 'neutral', asChild } = _a, rest = __rest(_a, ["className", "color", "asChild"]);
    const Component = asChild ? Slot : 'div';
    return (_jsx(Component, Object.assign({ ref: ref, className: classNames('inline-flex flex-row gap-1 items-center whitespace-nowrap border-light border-solid border-1 rounded-full px-2 py-1 text-black', {
            'bg-primary-wash': color === 'primary',
            'bg-accent-wash': color === 'accent',
        }, className) }, rest)));
});
//# sourceMappingURL=Chip.js.map