/// <reference types="react" resolution-mode="require"/>
import * as SliderPrimitive from '@radix-ui/react-slider';
export declare const SliderRoot: import("react").FunctionComponent<Omit<SliderPrimitive.SliderProps & import("react").RefAttributes<HTMLSpanElement>, "ref"> & {
    ref?: ((instance: HTMLSpanElement | null) => void) | import("react").RefObject<HTMLSpanElement> | null | undefined;
}>;
export declare const SliderTrack: import("react").FunctionComponent<Omit<SliderPrimitive.SliderTrackProps & import("react").RefAttributes<HTMLSpanElement>, "ref"> & {
    ref?: ((instance: HTMLSpanElement | null) => void) | import("react").RefObject<HTMLSpanElement> | null | undefined;
}>;
export declare const SliderRange: import("react").FunctionComponent<Omit<SliderPrimitive.SliderRangeProps & import("react").RefAttributes<HTMLSpanElement>, "ref"> & {
    ref?: ((instance: HTMLSpanElement | null) => void) | import("react").RefObject<HTMLSpanElement> | null | undefined;
}>;
export declare const SliderThumb: import("react").FunctionComponent<Omit<SliderPrimitive.SliderThumbProps & import("react").RefAttributes<HTMLSpanElement>, "ref"> & {
    ref?: ((instance: HTMLSpanElement | null) => void) | import("react").RefObject<HTMLSpanElement> | null | undefined;
}>;
interface SliderProps extends SliderPrimitive.SliderProps {
    label?: string;
    color?: 'default' | 'primary';
}
export declare function Slider({ label, color, ...props }: SliderProps): import("react/jsx-runtime").JSX.Element;
export {};
