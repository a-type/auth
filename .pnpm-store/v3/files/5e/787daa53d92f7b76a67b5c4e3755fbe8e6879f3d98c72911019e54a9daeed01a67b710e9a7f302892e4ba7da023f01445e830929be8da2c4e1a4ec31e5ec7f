// @unocss-include
'use client';
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { jsx as _jsx } from "react/jsx-runtime";
import classNames from 'clsx';
import { forwardRef, lazy } from 'react';
const EditorContent = lazy(() => import('./EditorContent.js'));
export const RichEditor = forwardRef(function RichEditor(_a, ref) {
    var { className } = _a, rest = __rest(_a, ["className"]);
    if (typeof ref === 'string') {
        throw new Error('String ref not supported!');
    }
    return (_jsx(EditorContent, Object.assign({ ref: ref, className: classNames('layer-components:w-full layer-components:rounded-lg', !rest.readOnly &&
            'bg-gray-blend [&_.ProseMirror:focus]:outline-none [&_.ProseMirror:focus]:bg-gray-1 [&_.ProseMirror:focus]:shadow-focus', '[&_.ProseMirror_h1,h2,h3,p]:mt-0', '[&_.ProseMirror_h1]:text-xl [&_.ProseMirror_h1]:font-medium', '[&_.ProseMirror_h2]:text-lg [&_.ProseMirror_h2]:font-medium [&_.ProseMirror_h2]:mt-4 [&_.ProseMirror_h2]:mb-2', '[&_.ProseMirror_h3]:text-md [&_.ProseMirror_h3]:font-extrabold', '[&_.ProseMirror_a]:underline', className) }, rest)));
});
//# sourceMappingURL=RichEditor.js.map