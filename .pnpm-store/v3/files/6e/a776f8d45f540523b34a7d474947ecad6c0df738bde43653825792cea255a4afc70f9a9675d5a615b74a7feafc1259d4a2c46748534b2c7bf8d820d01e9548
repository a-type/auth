import { FocusEvent, KeyboardEventHandler, MouseEventHandler } from 'react';
import { InputProps } from '../input/Input.js';
export type LiveUpdateTextFieldProps = {
    value: string;
    debounceMs?: number;
    onChange: (value: string) => void;
    textArea?: boolean;
    className?: string;
    onFocus?: (ev: FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => void;
    onBlur?: (ev: FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => void;
    autoComplete?: InputProps['autoComplete'];
    autoFocus?: InputProps['autoFocus'];
    autoSelect?: InputProps['autoSelect'];
    required?: boolean;
    placeholder?: string;
    type?: InputProps['type'];
    id?: string;
    onKeyDown?: KeyboardEventHandler;
    onKeyUp?: KeyboardEventHandler;
    onClick?: MouseEventHandler;
};
/**
 * An extension of TextField which keeps a local realtime value in state and
 * periodically reports changes to the parent. Use this to connect
 * to the API and update a value from the field directly.
 *
 * This component is optimistic and will not respond to external changes while focused.
 */
export declare const LiveUpdateTextField: import("react").ForwardRefExoticComponent<LiveUpdateTextFieldProps & import("react").RefAttributes<HTMLInputElement | HTMLTextAreaElement>>;
